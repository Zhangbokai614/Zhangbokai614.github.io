import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as a,f as t}from"./app-2TZ9BkDA.js";const e="/assets/images/mysql/data-type/integer/1.png",p="/assets/images/mysql/data-type/integer/2.png",o="/assets/images/mysql/data-type/integer/3.png",i="/assets/images/mysql/data-type/integer/4.png",l="/assets/images/mysql/data-type/integer/5.png",c="/assets/images/mysql/data-type/integer/6.png",r="/assets/images/mysql/data-type/integer/7.png",d="/assets/images/mysql/data-type/integer/8.png",u="/assets/images/mysql/data-type/integer/9.png",k="/assets/images/mysql/data-type/integer/10.png",g="/assets/images/mysql/data-type/integer/11.png",m="/assets/images/mysql/data-type/integer/12.png",y="/assets/images/mysql/data-type/integer/13.png",v="/assets/images/mysql/data-type/integer/14.png",b="/assets/images/mysql/data-type/integer/15.png",f="/assets/images/mysql/data-type/integer/16.png",L="/assets/images/mysql/data-type/integer/17.png",w="/assets/images/mysql/data-type/integer/18.png",E="/assets/images/mysql/data-type/integer/19.png",S="/assets/images/mysql/data-type/integer/20.png",_="/assets/images/mysql/data-type/integer/21.png",q="/assets/images/mysql/data-type/integer/22.png",T={},h=t('<h1 id="mysql-integer" tabindex="-1"><a class="header-anchor" href="#mysql-integer" aria-hidden="true">#</a> MySQL-Integer</h1><h2 id="feature" tabindex="-1"><a class="header-anchor" href="#feature" aria-hidden="true">#</a> Feature</h2><table><thead><tr><th><strong>Type</strong></th><th><strong>Storage (Bytes)</strong></th><th><strong>Minimum Value Signed</strong></th><th><strong>Minimum Value Unsigned</strong></th><th><strong>Maximum Value Signed</strong></th><th><strong>Maximum Value Unsigned</strong></th></tr></thead><tbody><tr><td><strong>TINYINT</strong></td><td>1</td><td>-128</td><td>0</td><td>127</td><td>255</td></tr><tr><td><strong>SMALLINT</strong></td><td>2</td><td>-32768</td><td>0</td><td>32767</td><td>65535</td></tr><tr><td><strong>MEDIUMINT</strong></td><td>3</td><td>-8388608</td><td>0</td><td>8388607</td><td>16777215</td></tr><tr><td><strong>INT</strong></td><td>4</td><td>-2147483648</td><td>0</td><td>2147483647</td><td>4294967295</td></tr><tr><td><strong>BIGINT</strong></td><td>8</td><td>-263</td><td>0</td><td>263-1</td><td>264-1</td></tr></tbody></table><p>  以 <strong>TINYINT</strong> 为例， 1 bytes = 8 bit，在有符号情况下值可用空间为 7 bit 所以最多可以表示正负 27 范围内的整数，无符号情况下则可以使用 8 bit 的空间，所以正数表示范围增加到 28 , 但是可表示的数的数量不变，其它类型同理，所以只要简单记住每个类型占多少字节，即可推算出他们的表示范围</p><figure><img src="'+e+'" alt="图 1：tinyint" tabindex="0" loading="lazy"><figcaption>图 1：tinyint</figcaption></figure><h2 id="overflow" tabindex="-1"><a class="header-anchor" href="#overflow" aria-hidden="true">#</a> Overflow</h2><p>  创建下表用于测试</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span>\n  <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n    <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span> <span class="token keyword">unsigned</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">191</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span> <span class="token keyword">tinyint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">UNIQUE</span> <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token operator">=</span> <span class="token number">13</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span> <span class="token operator">=</span> utf8mb4 <span class="token keyword">COLLATE</span> <span class="token operator">=</span> utf8mb4_0900_ai_ci\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><figure><img src="'+p+'" alt="图 2：SQL - 1 output" tabindex="0" loading="lazy"><figcaption>图 2：SQL - 1 output</figcaption></figure><p> </p><p>  插入测试数据，第二条记录数据超出范围，无法插入</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;lisi&#39;</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p> </p><figure><img src="'+o+`" alt="图 3：SQL - 2 output" tabindex="0" loading="lazy"><figcaption>图 3：SQL - 2 output</figcaption></figure><p> </p><p>  现在修改数据库模式，再次尝试插入超过范围的值</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> sql_mode <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p> </p><figure><img src="`+i+'" alt="图 4：SQL - 3 output" tabindex="0" loading="lazy"><figcaption>图 4：SQL - 3 output</figcaption></figure><p> </p><p>  插入成功，但是数据被截断。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">&#39;wangwu&#39;</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><figure><img src="'+l+'" alt="图 5：SQL - 4 L1 output" tabindex="0" loading="lazy"><figcaption>图 5：SQL - 4 L1 output</figcaption></figure><figure><img src="'+c+`" alt="图 6：SQL - 4 L2 output" tabindex="0" loading="lazy"><figcaption>图 6：SQL - 4 L2 output</figcaption></figure><p> </p><p>  进行运算，超出类型范围的结果依然运算正常，并且结果与二元运算的另一个参数的类型不一定等于原数据类型。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">sum</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> age <span class="token operator">+</span> <span class="token number">200</span>  <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> age <span class="token operator">*</span> <span class="token number">10</span>  <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> age <span class="token operator">/</span> <span class="token number">1000</span>  <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> age <span class="token operator">+</span> <span class="token number">0.1</span>  <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><figure><img src="`+r+'" alt="图 7：SQL - 5 L1 ～ L2 output" tabindex="0" loading="lazy"><figcaption>图 7：SQL - 5 L1 ～ L2 output</figcaption></figure><figure><img src="'+d+'" alt="图 8：SQL - 5 L3 ～ L4 output" tabindex="0" loading="lazy"><figcaption>图 8：SQL - 5 L3 ～ L4 output</figcaption></figure><figure><img src="'+u+`" alt="图 9：SQL - 5 L5 output" tabindex="0" loading="lazy"><figcaption>图 9：SQL - 5 L5 output</figcaption></figure><p> </p><p>  把以下查询结果保存为视图，观察数据类型</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> tmp_view <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> age <span class="token operator">+</span> <span class="token number">200</span><span class="token punctuation">,</span> age <span class="token operator">+</span> <span class="token number">40000</span><span class="token punctuation">,</span> age <span class="token operator">*</span> <span class="token number">0.001</span><span class="token punctuation">,</span> age <span class="token operator">/</span> <span class="token number">1000</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>
<span class="token keyword">DESC</span> tmp_view<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tmp_view<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><figure><img src="`+k+`" alt="图 10：SQL - 6 output" tabindex="0" loading="lazy"><figcaption>图 10：SQL - 6 output</figcaption></figure><p> </p><p>  不难发现，age + 200 与 age + 4000 虽然分别在 <strong>SMALLINT</strong> 与 <strong>MEDIUMINT</strong> 范围内，但是数据类型为 int，转为小数时会变为 decimal 类型，并且使用满足当前计算的最少的小数位，而且由于除法的原因， age / 1000 可以为 NULL</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p> </p><figure><img src="`+g+`" alt="图 11：SQL - 7 output" tabindex="0" loading="lazy"><figcaption>图 11：SQL - 7 output</figcaption></figure><p> </p><p>  我们在建表时尽量不要使用 CREATE TABLE AS 语句，这样可能会造成资源的浪费，并且可能会打破某些本该存在的约束。</p><p>  现在我们尝试把运算结果使用 UPDATE 保存到原列中，与普通的 INSERT 一样，数据库会告诉我们值超出范围</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> student <span class="token keyword">SET</span> age <span class="token operator">=</span> <span class="token punctuation">(</span>age <span class="token operator">+</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p> </p><figure><img src="`+m+`" alt="图 12：SQL - 8 output" tabindex="0" loading="lazy"><figcaption>图 12：SQL - 8 output</figcaption></figure><p> </p><p>  修改模式后，插入成功，但是数据被截断</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> sql_mode <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">UPDATE</span> student <span class="token keyword">SET</span> age <span class="token operator">=</span> <span class="token punctuation">(</span>age <span class="token operator">+</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><figure><img src="`+y+'" alt="图 12：SQL - 9 L1 output" tabindex="0" loading="lazy"><figcaption>图 12：SQL - 9 L1 output</figcaption></figure><figure><img src="'+v+'" alt="图 13：SQL - 9 L2 output" tabindex="0" loading="lazy"><figcaption>图 13：SQL - 9 L2 output</figcaption></figure><figure><img src="'+b+`" alt="图 14：SQL - 9 L3 output" tabindex="0" loading="lazy"><figcaption>图 14：SQL - 9 L3 output</figcaption></figure><p> </p><h2 id="operation" tabindex="-1"><a class="header-anchor" href="#operation" aria-hidden="true">#</a> Operation</h2><p>  现在使用 BIGINT 的最大值创建一个视图，再次进行运算会发生什么呢？</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> tmp_max <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> <span class="token number">9223372036854775807</span> <span class="token keyword">AS</span> bnt<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tmp_max<span class="token punctuation">;</span>
<span class="token keyword">DESC</span> tmp_max<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><figure><img src="`+f+`" alt="图 15：SQL - 10 output" tabindex="0" loading="lazy"><figcaption>图 15：SQL - 10 output</figcaption></figure><p> </p><p>  不同于 <strong>TINYINT，BIGINT</strong> 无法进行超出自身范围的运算，毕竟它已经是整数类型中最大的了。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> bnt <span class="token operator">+</span> <span class="token number">1</span> <span class="token keyword">FROM</span> tmp_max<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> age <span class="token operator">+</span> <span class="token number">1</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><figure><img src="`+L+`" alt="图 16：SQL - 11 output" tabindex="0" loading="lazy"><figcaption>图 16：SQL - 11 output</figcaption></figure><p> </p><p>  切换模式后依然无法进行运算</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> sql_mode <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> bnt <span class="token operator">+</span> <span class="token number">1</span> <span class="token keyword">FROM</span> tmp_max<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><figure><img src="`+w+`" alt="图 17：SQL - 12 output" tabindex="0" loading="lazy"><figcaption>图 17：SQL - 12 output</figcaption></figure><p> </p><p>  转换为 UNSIGNED 之后，运算成功，但是范围也只是提高了一倍，并且不能为负数</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code> <span class="token keyword">SELECT</span> CAST<span class="token punctuation">(</span>bnt <span class="token keyword">AS</span> <span class="token keyword">UNSIGNED</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token keyword">FROM</span> tmp_max<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p> </p><figure><img src="`+E+`" alt="图 18：SQL - 13 output" tabindex="0" loading="lazy"><figcaption>图 18：SQL - 13 output</figcaption></figure><p> </p><p>  DECIMAL 类型最多允许储存 65 位的数，转换之后，我们可运算的范围会大幅提升</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token punctuation">(</span>bnt <span class="token operator">*</span> <span class="token number">0.1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100000000000000000000000000000000000000000000000000000000000000</span> <span class="token keyword">AS</span> dmx <span class="token keyword">FROM</span> tmp_max<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p> </p><figure><img src="`+S+`" alt="图 19：SQL - 14 output" tabindex="0" loading="lazy"><figcaption>图 19：SQL - 14 output</figcaption></figure><p> </p><p>  保存为视图后显示的类型为 decimal(65,1)，但是仔细数一数结果的位数会发现它有 80 位，这是因为我们创建的是 VIEW。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> tmp_view_decimal <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> <span class="token punctuation">(</span>bnt <span class="token operator">*</span> <span class="token number">0.1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100000000000000000000000000000000000000000000000000000000000000</span> <span class="token keyword">AS</span> dmx <span class="token keyword">FROM</span> tmp_max<span class="token punctuation">;</span>
<span class="token keyword">DESC</span> tmp_view_decimal<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tmp_view_decimal<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><figure><img src="`+_+`" alt="图 20：SQL - 15 output" tabindex="0" loading="lazy"><figcaption>图 20：SQL - 15 output</figcaption></figure><p> </p><p>  当进行相同的计算并储存为 TABLE 时，数据库就会告诉我们超出范围。再次调整运算的大小，把结果缩小到 65 位以内，插入成功。所以使用 DECIMAL 类型可以进行非常可观的大数运算。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tmp_decimal <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> <span class="token punctuation">(</span>bnt <span class="token operator">*</span> <span class="token number">0.1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10000000000000000000000000000000000000000000000</span> <span class="token keyword">AS</span> dmx <span class="token keyword">FROM</span> tmp_max<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tmp_decimal<span class="token punctuation">;</span>
<span class="token keyword">DESC</span> tmp_decimal<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><figure><img src="`+q+'" alt="图 21：SQL - 16 output" tabindex="0" loading="lazy"><figcaption>图 21：SQL - 16 output</figcaption></figure>',92),x=[h];function Q(I,C){return n(),a("div",null,x)}const A=s(T,[["render",Q],["__file","integer.html.vue"]]);export{A as default};
