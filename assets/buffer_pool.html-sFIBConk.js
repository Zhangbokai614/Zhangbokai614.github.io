import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as l,c as r,b as s,d as n,e,f as o}from"./app-MqE_xA0-.js";const c="/assets/images/mysql/innodb/buffer-pool/1.png",i={},d=o('<h1 id="mysql-buffer-pool" tabindex="-1"><a class="header-anchor" href="#mysql-buffer-pool" aria-hidden="true">#</a> MySQL-Buffer pool</h1><p>  由于硬盘读写速度等问题，在一般的数据库中进行 <strong>I/O</strong> 操作是非常耗时的，MySQL 为了减少 I/O 操作的次数，使用了 <strong>Buffer pool</strong> 机制，通过它，MySQL 可以把<strong>常用</strong>的数据储存在<strong>内存</strong>中，这样下次操作相同的数据时直接从内存中读取即可，不需要再去硬盘中抽取数据而执行耗时的 I/O 操作</p><h2 id="规则" tabindex="-1"><a class="header-anchor" href="#规则" aria-hidden="true">#</a> 规则</h2><p>  MySQL 使用优化过的 <strong>LRU</strong>（Least Recently Used） 算法管理内存中的数据，管理数据的最小单位是 <strong>page</strong>，而一个 page 中有若干条数据，page 的大小由系统变量 <strong>@@innodb_page_size</strong> 来决定，默认为 <strong>16KB</strong>，存储相关的内容在本章节不再展开讨论</p>',4),u={href:"https://dev.mysql.com/doc/refman/8.0/en/innodb-buffer-pool.html",target:"_blank",rel:"noopener noreferrer"},k=s("strong",null,"New",-1),m=s("strong",null,"Old",-1),b=o('<p>  要注意的是，与传统 LRU 算法不同，新读取的 page 不会立即插入 New 部分的 Head ，而是插入 Old 部分的 Head ，当这些 page 再次被使用时，才会被放到 New 部分的 Head ，这有效防止了某次不常用的大规模扫描把 New 部分整体替换掉，并且 MySQL 还通过 <strong>@@innodb_old_blocks_time</strong> 对 New 部分进行了保护，在 innodb_old_blocks_time 时间内，不论上述所说的大规模 page 被访问多少次，都不会进入 New 部分</p><figure><img src="'+c+`" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h2 id="状态" tabindex="-1"><a class="header-anchor" href="#状态" aria-hidden="true">#</a> 状态</h2><p>  通过变量 <strong>@@innodb_buffer_pool_size</strong> 可以查看 Buffer pool 的大小，单位是字节，把它除 1024（Bit -&gt; KB） 再除 16 就是我们 Buffer pool 中可以缓存的 page 的大小</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> @<span class="token variable">@innodb_buffer_pool_size</span><span class="token punctuation">;</span>

<span class="token operator">+</span><span class="token comment">---------------------------+</span>
<span class="token operator">|</span> @<span class="token variable">@innodb_buffer_pool_size</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------------+</span>
<span class="token operator">|</span>                 <span class="token number">134217728</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><p>  通过 <strong>SQL-2</strong> 输出中的 <strong>BUFFER POOL AND MEMORY</strong> 部分，我们可以查看 Buffer pool 的状态</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">ENGINE</span> <span class="token keyword">INNODB</span> <span class="token keyword">STATUS</span><span class="token punctuation">;</span>

<span class="token comment">----------------------</span>
BUFFER POOL <span class="token operator">AND</span> MEMORY
<span class="token comment">----------------------</span>
Total large memory allocated <span class="token number">0</span>
Dictionary memory allocated <span class="token number">604739</span>
Buffer pool size   <span class="token number">8192</span>
Free buffers       <span class="token number">1</span>
<span class="token keyword">Database</span> pages     <span class="token number">7914</span>
Old <span class="token keyword">database</span> pages <span class="token number">2939</span>
Modified db pages  <span class="token number">0</span>
Pending <span class="token keyword">reads</span>      <span class="token number">0</span>
Pending writes: LRU <span class="token number">0</span><span class="token punctuation">,</span> flush list <span class="token number">0</span><span class="token punctuation">,</span> single page <span class="token number">0</span>
Pages made young <span class="token number">249762</span><span class="token punctuation">,</span> <span class="token operator">not</span> young <span class="token number">452654</span>
<span class="token number">0.02</span> youngs<span class="token operator">/</span>s<span class="token punctuation">,</span> <span class="token number">350.29</span> non<span class="token operator">-</span>youngs<span class="token operator">/</span>s
Pages <span class="token keyword">read</span> <span class="token number">15114</span><span class="token punctuation">,</span> created <span class="token number">173</span><span class="token punctuation">,</span> written <span class="token number">858</span>
<span class="token number">54.26</span> <span class="token keyword">reads</span><span class="token operator">/</span>s<span class="token punctuation">,</span> <span class="token number">0.00</span> creates<span class="token operator">/</span>s<span class="token punctuation">,</span> <span class="token number">0.00</span> writes<span class="token operator">/</span>s
Buffer pool hit rate <span class="token number">936</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">,</span> young<span class="token operator">-</span>making rate <span class="token number">0</span> <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">not</span> <span class="token number">413</span> <span class="token operator">/</span> <span class="token number">1000</span>
Pages <span class="token keyword">read</span> ahead <span class="token number">51.97</span><span class="token operator">/</span>s<span class="token punctuation">,</span> evicted without access <span class="token number">0.12</span><span class="token operator">/</span>s<span class="token punctuation">,</span> Random <span class="token keyword">read</span> ahead <span class="token number">0.00</span><span class="token operator">/</span>s
LRU len: <span class="token number">7914</span><span class="token punctuation">,</span> unzip_LRU len: <span class="token number">0</span>
I<span class="token operator">/</span>O sum<span class="token punctuation">[</span><span class="token number">135</span><span class="token punctuation">]</span>:cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> unzip sum<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>:cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><p>  <strong>SQL-2 L8</strong> 的 <strong>Buffer pool size</strong> 是分配给 Buffer pool 的总 page 大小（<strong>@@innodb_buffer_pool_size / 1024 / 16</strong>），对应的，Free buffers 属性就是空闲的 page 数量</p>`,10),v=s("strong",null,"@@innodb_buffer_pool_instances",-1),g=s("strong",null,"@@innodb_buffer_pool_chunk_size",-1),_=s("strong",null,"@@innodb_buffer_pool_size",-1),f=s("strong",null,"SQL-3",-1),y=s("strong",null,"@@innodb_buffer_pool_instances",-1),w={href:"https://dev.mysql.com/doc/refman/8.0/en/innodb-multiple-buffer-pools.html",target:"_blank",rel:"noopener noreferrer"},h=o(`<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> @<span class="token variable">@innodb_buffer_pool_instances</span><span class="token punctuation">;</span>

<span class="token operator">+</span><span class="token comment">--------------------------------+</span>
<span class="token operator">|</span> @<span class="token variable">@innodb_buffer_pool_instances</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------------+</span>
<span class="token operator">|</span>                              <span class="token number">1</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.56</span> sec<span class="token punctuation">)</span>


<span class="token keyword">SELECT</span> @<span class="token variable">@innodb_buffer_pool_chunk_size</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">------------------------------------------------+</span>
<span class="token operator">|</span> @<span class="token variable">@innodb_buffer_pool_chunk_size</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------------------------------------------+</span>
<span class="token operator">|</span>                                 <span class="token number">0.125000000000</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------------------------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>


<span class="token keyword">SELECT</span> @<span class="token variable">@innodb_buffer_pool_size</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">------------------------------------------+</span>
<span class="token operator">|</span> @<span class="token variable">@innodb_buffer_pool_size</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------------------------------------+</span>
<span class="token operator">|</span>                           <span class="token number">0.125000000000</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------------------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

<span class="token comment">---------------------------------------------------------</span>
<span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> innodb_buffer_pool_size <span class="token operator">=</span> <span class="token number">201326592</span><span class="token punctuation">;</span> <span class="token comment">-- 0.125G * 1.5</span>

<span class="token keyword">SELECT</span> @<span class="token variable">@innodb_buffer_pool_size</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">------------------------------------------+</span>
<span class="token operator">|</span> @<span class="token variable">@innodb_buffer_pool_size</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------------------------------------+</span>
<span class="token operator">|</span>                           <span class="token number">0.250000000000</span> <span class="token operator">|</span>  <span class="token comment">-- 0.125G * 2</span>
<span class="token operator">+</span><span class="token comment">------------------------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><p>  <strong>L10</strong> 的 <strong>Database pages</strong> 为 Buffer pool 的 LRU 链表所占的总页面大小，<strong>Old database pages</strong> 为 Buffer pool 中 Old 部分的页面大小，默认在不变动 Midpoint 的情况下 <strong>Old database pages / Database pages</strong> = 3.7 （3/8），读者们可以一根据自己具体需求来进行设置</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> @<span class="token variable">@innodb_old_blocks_pct</span><span class="token punctuation">;</span>

<span class="token operator">+</span><span class="token comment">-------------------------+</span>
<span class="token operator">|</span> @<span class="token variable">@innodb_old_blocks_pct</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------------+</span>
<span class="token operator">|</span>                      <span class="token number">37</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><p>  <strong>L16</strong> 与 <strong>L18</strong>、<strong>L20</strong> 中的 /s 代表每秒平均的值，统计范围是从上次 SHOW ENGINE INNODB STATUS 到这次 SHOW ENGINE INNODB STATUS 之间</p><p>  <strong>youngs/s</strong> 表示在作用时间内 Old 部分进入到 New 部分的每秒的平均数量，如果此参数过<strong>低</strong>可能有以下两种情况</p><ol><li>近期进行过大规模扫描，这种情况下大规模 page 会可能会占满 Old 部分，而这些大量扫描的 page 大概率不会常用到，所以导致 youngs/s 数值过低</li><li>如果没有进行过大规模扫描但是 youngs/s 依然非常低，说明大部分 page 在被再次读取到之前就已经进入 Old 部分的尾部并且清除了，这时可以考虑<strong>增加</strong> Old 部分的大小，这样 page 在 Old 部分停留的时间就会更长，被再次访问的概率也就会更高。另外通过<strong>降低</strong> <strong>@@innodb_old_blocks_time</strong> 也可以增加 Old 部分中 page 被读取到 New 部分的概率</li></ol><p>  在 <strong>SQL-5</strong> 的演示中， <strong>@@innodb_old_blocks_time</strong> 默认为 1 秒，我们可以像设置其它变量那样设置它</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> @<span class="token variable">@innodb_old_blocks_time</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">--------------------------+</span>
<span class="token operator">|</span> @<span class="token variable">@innodb_old_blocks_time</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------+</span>
<span class="token operator">|</span>                     <span class="token number">1000</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>


<span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> innodb_old_blocks_time <span class="token operator">=</span> <span class="token number">1001</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> @<span class="token variable">@innodb_old_blocks_time</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">--------------------------+</span>
<span class="token operator">|</span> @<span class="token variable">@innodb_old_blocks_time</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------+</span>
<span class="token operator">|</span>                     <span class="token number">1001</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><p>  non-youns/s 表示在作用时间内，page 平均每秒移动到 Old 部分的 page 数量，如果进行大量扫描之后没有看到较高的 non-youns/s，说明 <strong>@@innodb_old_blocks_time</strong> 较低，导致大量不常用数据进入到了 New 部分，所以应该考虑<strong>增加</strong> <strong>@@innodb_old_blocks_time</strong></p><p>  <strong>L19</strong> 的 <strong>Buffer pool hit rate</strong> 代表 Buffer pool 的命中率，<strong>young-making rate</strong> 是因为访问使 page <strong>进入到 New</strong> 部分的命中率，<strong>not</strong> 则是访问 page 之后<strong>没有进入到 New</strong> 部分的命中率，在 page 处于 New 部分前 1/4 或不满足 <strong>@@innodb_old_blocks_time</strong> 设定的时间时会发生这种情况并使 not 值发生变化</p>`,13),L={href:"https://dev.mysql.com/doc/refman/8.0/en/innodb-buffer-pool.html",target:"_blank",rel:"noopener noreferrer"};function B(O,N){const a=t("ExternalLinkIcon");return l(),r("div",null,[d,s("p",null,[n("  MySQL 中的 LRU 使用链表来实现，如 "),s("a",u,[n("图一"),e(a)]),n(" 所示，Buffer pool 分为 "),k,n(" 与 "),m,n(" 两部分，它们使用 Midpoint 来分隔，其中 New 部分占大约 5/8 的空间 Old 占大约 3/8 的空间，图的右侧标注了数据的流向，新访问的 page 会储存到 New 中，不常使用的 page 会放到 Old 中，最后 Old 中的内容会被逐渐清出")]),b,s("p",null,[n("  我们可以调整 Buffer pool 的大小，但这要符合 "),v,n(" * "),g,n(" | "),_,n(" 的条件，如果不满足则会向上取整，直到 Buffer pool 等于两者的乘积或者成为倍数关系，"),f,n(" 展示了这种关系以及设置过程，另外适当设置（大小在几个 G 的情况下） "),y,n(" 数量可以提高 Buffer pool 在并发使用时的效率，详见官方文档 "),s("a",w,[n("Configuring Multiple Buffer Pool Instances"),e(a)])]),h,s("p",null,[n("  在实际使用中，我们需要结合 MySQL 所处服务器的情况以及具体业务来优化 Buffer pool，保证它的命中率， 其它参数具体说明可以参考官方文档 "),s("a",L,[n("InnoDB Buffer Pool Metrics"),e(a)])])])}const q=p(i,[["render",B],["__file","buffer_pool.html.vue"]]);export{q as default};
