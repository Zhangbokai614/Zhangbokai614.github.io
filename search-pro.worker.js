const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,u=Array.from(n.keys());this.set=t,this._type=s,this._path=u.length>0?[{node:n,keys:u}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ut=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const u=t.length+1,o=u+s,i=new Uint8Array(o*u).fill(s+1);for(let r=0;r<u;++r)i[r]=r;for(let r=1;r<o;++r)i[r*u]=r;return R(e,t,s,n,i,1,u,""),n},R=(e,t,s,n,u,o,i,r)=>{const d=o*i;t:for(const l of e.keys())if(l===F){const a=u[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=o;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=u[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=u[f+y]+ +b,A=u[f+y+1]+1,w=u[p+y]+1,L=u[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}R(e.get(l),t,s,n,u,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[u,o]=M(n);for(const i of u.keys())if(i!==F&&i.startsWith(o)){const r=new Map;return r.set(i.slice(o.length),u.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ut(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,O(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);let u=n.get(F);return u===void 0&&n.set(F,u=s()),u}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,u]of t)s.set(n,u);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},O=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const o of e.keys())if(o!==F&&t[n]===o[0]){const i=Math.min(s-n,o.length);let r=1;for(;r<i&&t[n+r]===o[r];)++r;const d=e.get(o);if(r===o.length)e=d;else{const l=new Map;l.set(o.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(o),e=l}n+=r;continue t}const u=new Map;return e.set(t.slice(n),u),u}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[u,o]=s.entries().next().value;q(n,u,o)}}},W=e=>{if(e.length===0)return;const[t,s]=M(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,u]=t.entries().next().value;n!==F&&q(e.slice(0,-1),n,u)}},q=(e,t,s)=>{if(e.length===0)return;const[n,u]=M(e);n.set(u+t,s),n.delete(u)},M=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",$="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},N=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:u,terms:o,match:i}=t.get(s);n.score=n.score+u,n.match=Object.assign(n.match,i),P(n.terms,o)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const u=e.get(n);if(u==null)continue;const{score:o,terms:i,match:r}=t.get(n);P(u.terms,i),s.set(n,{score:u.score+o,terms:u.terms,match:Object.assign(u.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,u,o)=>{const{k:i,b:r,d}=o;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/u)))},ft=e=>(t,s,n)=>{const u=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,o=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:u,prefix:o}},H=(e,t,s,n)=>{for(const u of Object.keys(e._fieldIds))if(e._fieldIds[u]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${u}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const u=e._index.fetch(n,ht),o=u.get(t);o==null||o.get(s)==null?H(e,s,t,n):o.get(s)<=1?o.size<=1?u.delete(t):o.delete(s):o.set(s,o.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:$,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,u,o,i,r,d=new Map)=>{if(u==null)return d;for(const l of Object.keys(o)){const a=o[l],h=e._fieldIds[l],m=u.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=G(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},u=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:G(n.boost,g)||1}),{}),{boostDocument:o,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,u,o,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f?.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,u,o,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,u,o,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:u,searchOptions:o}=e._options,i={tokenize:n,processTerm:u,...o,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),u=[];for(const[o,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(o),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(o)),(s.filter==null||s.filter(a))&&u.push(a)}return u.sort(N),u},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:o,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=o,d.count+=1):n.set(r,{score:o,terms:i,count:1})}const u=[];for(const[o,{score:i,terms:r,count:d}]of n)u.push({suggestion:o,terms:r,score:i/d});return u.sort(N),u};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const u={};for(const[o,i]of n)u[o]=Object.fromEntries(i);t.push([s,u])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:u,fieldLength:o,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=u,h._fieldLength=k(o),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),u=[];let o=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&u.push(h),i+=h.length,a||(u.push(["mark",t]),i+=t.length,i>=100&&u.push(" …"))};let d=s.indexOf(n,o);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(o,d)),o=l,i>100)break;d=s.indexOf(n,o)}return i<100&&r(e.slice(o),!0),u},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(u=>{const{id:o,terms:i,score:r}=u,d=o.includes("@"),l=o.includes("#"),[a,h]=o.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>u.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(u.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in u)for(const c of u.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,u],[,o])=>"max"==="total"?xt(u,o):kt(u,o)).map(([u,{title:o,contents:i}])=>{if(!o){const r=it(t,u);r&&(o=r.h)}return{title:o,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":120,\"nextId\":120,\"documentIds\":{\"0\":\"v-184f4da6\",\"1\":\"v-184f4da6#hi-there-👋\",\"2\":\"v-184f4da6#✍-blog-writing\",\"3\":\"v-67d327cb\",\"4\":\"v-67d327cb#微信公众号\",\"5\":\"v-1a3a24e5\",\"6\":\"v-1a3a24e5#base\",\"7\":\"v-1a3a24e5#control-flow\",\"8\":\"v-1a3a24e5#search\",\"9\":\"v-1a3a24e5#sorting\",\"10\":\"v-1a3a24e5#data-structure\",\"11\":\"v-1a3a24e5#memory\",\"12\":\"v-1a3a24e5#algorithm\",\"13\":\"v-1a3a24e5@0\",\"14\":\"v-1a3a24e5@1\",\"15\":\"v-2e25198a\",\"16\":\"v-2e25198a#mysql\",\"17\":\"v-2e25198a#mongodb\",\"18\":\"v-2e25198a@0\",\"19\":\"v-2e25198a@1\",\"20\":\"v-6beb5d16\",\"21\":\"v-6beb5d16#container\",\"22\":\"v-6beb5d16#ring\",\"23\":\"v-6beb5d16#link\",\"24\":\"v-6beb5d16#stack\",\"25\":\"v-6beb5d16#channel\",\"26\":\"v-6beb5d16#sort\",\"27\":\"v-6beb5d16#bubble\",\"28\":\"v-6beb5d16#selection\",\"29\":\"v-6beb5d16#insertion\",\"30\":\"v-6beb5d16#quick\",\"31\":\"v-6beb5d16#compare\",\"32\":\"v-6beb5d16#shell\",\"33\":\"v-6beb5d16#merge\",\"34\":\"v-6beb5d16#slice\",\"35\":\"v-6beb5d16#slice-py\",\"36\":\"v-6beb5d16#slice-go\",\"37\":\"v-6beb5d16@0\",\"38\":\"v-6beb5d16@1\",\"39\":\"v-2d0a8eae\",\"40\":\"v-2d0a8eae#go-语言源码阅读\",\"41\":\"v-2d0a8eae#authenticate\",\"42\":\"v-2d0a8eae@0\",\"43\":\"v-2d0a8eae@1\",\"44\":\"v-e02a086e\",\"45\":\"v-e02a086e#observable\",\"46\":\"v-e02a086e#react\",\"47\":\"v-e02a086e@0\",\"48\":\"v-e02a086e@1\",\"49\":\"v-14fef3a4\",\"50\":\"v-14fef3a4#core\",\"51\":\"v-14fef3a4#jetstream\",\"52\":\"v-14fef3a4@0\",\"53\":\"v-14fef3a4@1\",\"54\":\"v-e9a1f7e4\",\"55\":\"v-e9a1f7e4#proxy\",\"56\":\"v-e9a1f7e4#nginx\",\"57\":\"v-e9a1f7e4@0\",\"58\":\"v-e9a1f7e4@1\",\"59\":\"v-212ad8b6\",\"60\":\"v-212ad8b6#transaction\",\"61\":\"v-212ad8b6@0\",\"62\":\"v-212ad8b6@1\",\"63\":\"v-21ba2ec8\",\"64\":\"v-21ba2ec8#innodb\",\"65\":\"v-21ba2ec8#data-types\",\"66\":\"v-21ba2ec8#explain\",\"67\":\"v-21ba2ec8#procedure-function\",\"68\":\"v-21ba2ec8#partition\",\"69\":\"v-21ba2ec8@0\",\"70\":\"v-21ba2ec8@1\",\"71\":\"v-6c0c1fe8\",\"72\":\"v-6c0c1fe8#authenticate\",\"73\":\"v-6c0c1fe8@0\",\"74\":\"v-6c0c1fe8@1\",\"75\":\"v-d6f7b78c\",\"76\":\"v-d6f7b78c#channel\",\"77\":\"v-d6f7b78c@0\",\"78\":\"v-d6f7b78c@1\",\"79\":\"v-006a5e08\",\"80\":\"v-006a5e08#container\",\"81\":\"v-006a5e08@0\",\"82\":\"v-006a5e08@1\",\"83\":\"v-7f93625b\",\"84\":\"v-7f93625b#i-o\",\"85\":\"v-7f93625b@0\",\"86\":\"v-7f93625b@1\",\"87\":\"v-7f93795d\",\"88\":\"v-7f93795d#os\",\"89\":\"v-7f93795d@0\",\"90\":\"v-7f93795d@1\",\"91\":\"v-11573e80\",\"92\":\"v-11573e80#slice\",\"93\":\"v-11573e80@0\",\"94\":\"v-11573e80@1\",\"95\":\"v-2e5ba73a\",\"96\":\"v-2e5ba73a#sort\",\"97\":\"v-2e5ba73a@0\",\"98\":\"v-2e5ba73a@1\",\"99\":\"v-78b7afe3\",\"100\":\"v-78b7afe3#paper-js\",\"101\":\"v-78b7afe3#echarts-js\",\"102\":\"v-78b7afe3@0\",\"103\":\"v-78b7afe3@1\",\"104\":\"v-f4e6d0ce\",\"105\":\"v-f4e6d0ce#antd\",\"106\":\"v-f4e6d0ce#taro\",\"107\":\"v-f4e6d0ce@0\",\"108\":\"v-f4e6d0ce@1\",\"109\":\"v-20e2f74c\",\"110\":\"v-20e2f74c#base\",\"111\":\"v-20e2f74c#operating-mode\",\"112\":\"v-20e2f74c#other\",\"113\":\"v-20e2f74c@0\",\"114\":\"v-20e2f74c@1\",\"115\":\"v-2ef34e9a\",\"116\":\"v-2ef34e9a#base\",\"117\":\"v-2ef34e9a#stream\",\"118\":\"v-2ef34e9a@0\",\"119\":\"v-2ef34e9a@1\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[3,35],\"2\":[3,19],\"3\":[1],\"4\":[1,2],\"5\":[2],\"6\":[1,6],\"7\":[2,6],\"8\":[1,2],\"9\":[1,5],\"10\":[2,6],\"11\":[1,1],\"12\":[1,2],\"13\":[null,null,1],\"14\":[null,null,1],\"15\":[1],\"16\":[1,2],\"17\":[1,3],\"18\":[null,null,1],\"19\":[null,null,1],\"20\":[1,3],\"21\":[1],\"22\":[1,1],\"23\":[1,1],\"24\":[1,1],\"25\":[1,1],\"26\":[1],\"27\":[1,2],\"28\":[1,2],\"29\":[1,2],\"30\":[1,2],\"31\":[1,2],\"32\":[1,2],\"33\":[1,2],\"34\":[1],\"35\":[2,2],\"36\":[2,3],\"37\":[null,null,1],\"38\":[null,null,1],\"39\":[1],\"40\":[2,9],\"41\":[1,2],\"42\":[null,null,1],\"43\":[null,null,1],\"44\":[1],\"45\":[1,5],\"46\":[1,2],\"47\":[null,null,1],\"48\":[null,null,1],\"49\":[1],\"50\":[1,2],\"51\":[1,3],\"52\":[null,null,1],\"53\":[null,null,1],\"54\":[1],\"55\":[1,2],\"56\":[1,5],\"57\":[null,null,1],\"58\":[null,null,2],\"59\":[1],\"60\":[1,3],\"61\":[null,null,1],\"62\":[null,null,1],\"63\":[1],\"64\":[1,3],\"65\":[2,6],\"66\":[1,4],\"67\":[2,2],\"68\":[1,5],\"69\":[null,null,1],\"70\":[null,null,1],\"71\":[2],\"72\":[1,2],\"73\":[null,null,1],\"74\":[null,null,1],\"75\":[2],\"76\":[1,4],\"77\":[null,null,1],\"78\":[null,null,1],\"79\":[2],\"80\":[1,3],\"81\":[null,null,1],\"82\":[null,null,1],\"83\":[3],\"84\":[2,6],\"85\":[null,null,1],\"86\":[null,null,1],\"87\":[2],\"88\":[1,4],\"89\":[null,null,1],\"90\":[null,null,1],\"91\":[2],\"92\":[1,4],\"93\":[null,null,1],\"94\":[null,null,1],\"95\":[2],\"96\":[1,4],\"97\":[null,null,1],\"98\":[null,null,1],\"99\":[1],\"100\":[2,7],\"101\":[2,1],\"102\":[null,null,1],\"103\":[null,null,4],\"104\":[1],\"105\":[1,8],\"106\":[1,5],\"107\":[null,null,1],\"108\":[null,null,1],\"109\":[2],\"110\":[1,1],\"111\":[2,6],\"112\":[1,3],\"113\":[null,null,1],\"114\":[null,null,1],\"115\":[2],\"116\":[1,1],\"117\":[1,4],\"118\":[null,null,2],\"119\":[null,null,1]},\"averageFieldLength\":[1.3190965643956756,5.086001741568372,0.5800911192532092],\"storedFields\":{\"0\":{\"h\":\"关于我\"},\"1\":{\"h\":\"Hi there 👋\",\"t\":[\"My name is Bokai Zhang. I'm a Fullstack software engineer.\",\"My current status\",\"👨‍🔬 Trying to become a programming master.\",\"📚 Have been studying hard.\",\"🤔 I am currently working as a backend developer.\",\"💻 Thinking, Coding, Writing\"]},\"2\":{\"h\":\"✍ Blog & Writing\",\"t\":[\"Apart from coding, I also maintain a blog - you can find my articles on my Blog & Yuque & Observable & WeChat.\"]},\"3\":{\"h\":\"更多内容\"},\"4\":{\"h\":\"微信公众号\",\"t\":[\"同名微信公众号 - Transistor\"]},\"5\":{\"h\":\"C 语言教程\"},\"6\":{\"h\":\"Base\",\"t\":[\"Input & Output\",\"Introduction\",\"Binary\",\"Array\",\"Macros\"]},\"7\":{\"h\":\"Control Flow\",\"t\":[\"if-else\",\"if-else(nested)\",\"switch\",\"for\",\"Recursion\"]},\"8\":{\"h\":\"Search\",\"t\":[\"Binary Search\"]},\"9\":{\"h\":\"Sorting\",\"t\":[\"Bubble\",\"Insertion\",\"Selection\",\"Quicksort\",\"Compared\"]},\"10\":{\"h\":\"Data Structure\",\"t\":[\"Stack\",\"Typedef & Struct\",\"Stack accomplish\",\"Queue\",\"List\"]},\"11\":{\"h\":\"Memory\",\"t\":[\"Malloc\"]},\"12\":{\"h\":\"Algorithm\",\"t\":[\"找素数\",\"找两数和\"]},\"13\":{\"c\":[\"C\"]},\"14\":{\"c\":[\"c\"]},\"15\":{\"h\":\"Database\"},\"16\":{\"h\":\"MySQL\",\"t\":[\"MySQL 系列合集\"]},\"17\":{\"h\":\"MongoDB\",\"t\":[\"如何在 MongoDB 中使用事务\"]},\"18\":{\"c\":[\"Databse\"]},\"19\":{\"c\":[\"database\"]},\"20\":{\"h\":\"Gallery\",\"t\":[\"一张好图，胜过千言万语。\"]},\"21\":{\"h\":\"Container\"},\"22\":{\"h\":\"Ring\",\"t\":[\"ring\"]},\"23\":{\"h\":\"Link\",\"t\":[\"link\"]},\"24\":{\"h\":\"Stack\",\"t\":[\"stack\"]},\"25\":{\"h\":\"Channel\",\"t\":[\"channel\"]},\"26\":{\"h\":\"Sort\"},\"27\":{\"h\":\"Bubble\",\"t\":[\"sort-bubble\"]},\"28\":{\"h\":\"Selection\",\"t\":[\"sort-selection\"]},\"29\":{\"h\":\"Insertion\",\"t\":[\"sort-insertion\"]},\"30\":{\"h\":\"Quick\",\"t\":[\"sort-quick\"]},\"31\":{\"h\":\"Compare\",\"t\":[\"sort-compare\"]},\"32\":{\"h\":\"Shell\",\"t\":[\"sort-shell\"]},\"33\":{\"h\":\"Merge\",\"t\":[\"sort-merge\"]},\"34\":{\"h\":\"Slice\"},\"35\":{\"h\":\"Slice-Py\",\"t\":[\"slice-py\"]},\"36\":{\"h\":\"Slice-Go\",\"t\":[\"slice-go\",\"slice-go-copy\"]},\"37\":{\"c\":[\"Gallery\"]},\"38\":{\"c\":[\"gallery\"]},\"39\":{\"h\":\"Go\"},\"40\":{\"h\":\"Go 语言源码阅读\",\"t\":[\"Slices\",\"Channel\",\"Container\",\"I/O\",\"OS\",\"Sort\",\"Go 语言系列合集\"]},\"41\":{\"h\":\"Authenticate\",\"t\":[\"JWT\",\"RBAC\"]},\"42\":{\"c\":[\"Go\"]},\"43\":{\"c\":[\"golang\"]},\"44\":{\"h\":\"Javascript\"},\"45\":{\"h\":\"Observable\",\"t\":[\"Paper.js 绘画合集\",\"Echarts.js 素数间隔统计\"]},\"46\":{\"h\":\"React\",\"t\":[\"React 系列合集\"]},\"47\":{\"c\":[\"Javascript\"]},\"48\":{\"c\":[\"javascript\"]},\"49\":{\"h\":\"NATS\"},\"50\":{\"h\":\"Core\",\"t\":[\"NATS 核心服务系列文章\"]},\"51\":{\"h\":\"JetStream\",\"t\":[\"NATS JetStream 服务系列文章\"]},\"52\":{\"c\":[\"NATS\"]},\"53\":{\"c\":[\"nats\"]},\"54\":{\"h\":\"Nginx\"},\"55\":{\"h\":\"Proxy\",\"t\":[\"正向代理 & 反向代理\"]},\"56\":{\"h\":\"Nginx\",\"t\":[\"（一）使用 Nginx 部署一台反向代理服务器\"]},\"57\":{\"c\":[\"Nginx\"]},\"58\":{\"c\":[\"nginx\",\"network\"]},\"59\":{\"h\":\"MongoDB\"},\"60\":{\"h\":\"Transaction\",\"t\":[\"如何在 MongoDB 中使用事务\"]},\"61\":{\"c\":[\"MongoDB\"]},\"62\":{\"c\":[\"database\"]},\"63\":{\"h\":\"MySQL\"},\"64\":{\"h\":\"Innodb\",\"t\":[\"ACID\",\"Buffer pool\"]},\"65\":{\"h\":\"Data Types\",\"t\":[\"Date operate\",\"Integer\",\"Float\",\"Float-Evenly divisible\"]},\"66\":{\"h\":\"Explain\",\"t\":[\"Explain(一)\",\"Explain(二)\"]},\"67\":{\"h\":\"Procedure & Function\",\"t\":[\"Procedure & Function\"]},\"68\":{\"h\":\"Partition\",\"t\":[\"Partition(一)\",\"Partition(二)\",\"Partition(三)\"]},\"69\":{\"c\":[\"MySQL\"]},\"70\":{\"c\":[\"database\"]},\"71\":{\"h\":\"Go-Authenticate\"},\"72\":{\"h\":\"Authenticate\",\"t\":[\"JWT\",\"RBAC\"]},\"73\":{\"c\":[\"Go\"]},\"74\":{\"c\":[\"authenticate\"]},\"75\":{\"h\":\"Go-Channel\"},\"76\":{\"h\":\"Channel\",\"t\":[\"Channel(一)\",\"Channel(二)\"]},\"77\":{\"c\":[\"Go\"]},\"78\":{\"c\":[\"channel\"]},\"79\":{\"h\":\"Go-Container\"},\"80\":{\"h\":\"Container\",\"t\":[\"Heap\",\"Ring\",\"List\"]},\"81\":{\"c\":[\"Go\"]},\"82\":{\"c\":[\"container\"]},\"83\":{\"h\":\"Go-I/O\"},\"84\":{\"h\":\"I/O\",\"t\":[\"I/O(一)\",\"I/O(二)\",\"I/O(三)\"]},\"85\":{\"c\":[\"Go\"]},\"86\":{\"c\":[\"io\"]},\"87\":{\"h\":\"Go-OS\"},\"88\":{\"h\":\"OS\",\"t\":[\"OS(一)\",\"OS(二)\"]},\"89\":{\"c\":[\"Go\"]},\"90\":{\"c\":[\"os\"]},\"91\":{\"h\":\"Go-Slices\"},\"92\":{\"h\":\"Slice\",\"t\":[\"Slice(一)\",\"Slice(二)\"]},\"93\":{\"c\":[\"Go\"]},\"94\":{\"c\":[\"slices\"]},\"95\":{\"h\":\"Go-Sort\"},\"96\":{\"h\":\"Sort\",\"t\":[\"Sort(一)\",\"Sort(二)\"]},\"97\":{\"c\":[\"Go\"]},\"98\":{\"c\":[\"sort\"]},\"99\":{\"h\":\"Observable\"},\"100\":{\"h\":\"Paper.js\",\"t\":[\"分形-科赫雪花\",\"山脉生成\",\"流浪的球\",\"太阳系\",\"各种 demo\"]},\"101\":{\"h\":\"Echarts.js\",\"t\":[\"素数间隔统计\"]},\"102\":{\"c\":[\"Javascript\"]},\"103\":{\"c\":[\"paper.js\",\"echarts.js\",\"observable\"]},\"104\":{\"h\":\"React\"},\"105\":{\"h\":\"Antd\",\"t\":[\"Antd(一)- 项目初始化\",\"Antd(二)- 布局\",\"React Router(一)\"]},\"106\":{\"h\":\"Taro\",\"t\":[\"Taro | 微信小程序开发实录（一）\"]},\"107\":{\"c\":[\"Javascript\"]},\"108\":{\"c\":[\"react\"]},\"109\":{\"h\":\"NATS-Core\"},\"110\":{\"h\":\"Base\",\"t\":[\"Create\"]},\"111\":{\"h\":\"Operating Mode\",\"t\":[\"Publish-Subscribe & Request-Reply\",\"Queue Groups\"]},\"112\":{\"h\":\"Other\",\"t\":[\"Structured Data\",\"Drain\"]},\"113\":{\"c\":[\"NATS\"]},\"114\":{\"c\":[\"message\"]},\"115\":{\"h\":\"NATS-JetStream\"},\"116\":{\"h\":\"Base\",\"t\":[\"Create\"]},\"117\":{\"h\":\"Stream\",\"t\":[\"Config\",\"Retention & Discard\",\"Consumer\"]},\"118\":{\"c\":[\"NATS\",\"JetStream\"]},\"119\":{\"c\":[\"message\"]}},\"dirtCount\":0,\"index\":[[\"微信小程序开发实录\",{\"1\":{\"106\":1}}],[\"微信公众号\",{\"0\":{\"4\":1}}],[\"|\",{\"1\":{\"106\":1}}],[\"布局\",{\"1\":{\"105\":1}}],[\"项目初始化\",{\"1\":{\"105\":1}}],[\"各种\",{\"1\":{\"100\":1}}],[\"太阳系\",{\"1\":{\"100\":1}}],[\"流浪的球\",{\"1\":{\"100\":1}}],[\"山脉生成\",{\"1\":{\"100\":1}}],[\"科赫雪花\",{\"1\":{\"100\":1}}],[\"分形\",{\"1\":{\"100\":1}}],[\"三\",{\"1\":{\"68\":1,\"84\":1}}],[\"二\",{\"1\":{\"66\":1,\"68\":1,\"76\":1,\"84\":1,\"88\":1,\"92\":1,\"96\":1,\"105\":1}}],[\"部署一台反向代理服务器\",{\"1\":{\"56\":1}}],[\"使用\",{\"1\":{\"56\":1}}],[\"一\",{\"1\":{\"56\":1,\"66\":1,\"68\":1,\"76\":1,\"84\":1,\"88\":1,\"92\":1,\"96\":1,\"105\":2,\"106\":1}}],[\"一张好图\",{\"1\":{\"20\":1}}],[\"反向代理\",{\"1\":{\"55\":1}}],[\"正向代理\",{\"1\":{\"55\":1}}],[\"服务系列文章\",{\"1\":{\"51\":1}}],[\"核心服务系列文章\",{\"1\":{\"50\":1}}],[\"素数间隔统计\",{\"1\":{\"45\":1,\"101\":1}}],[\"绘画合集\",{\"1\":{\"45\":1}}],[\"jetstream\",{\"0\":{\"51\":1,\"115\":1},\"1\":{\"51\":1},\"2\":{\"118\":1}}],[\"js\",{\"0\":{\"100\":1,\"101\":1},\"1\":{\"45\":2},\"2\":{\"103\":2}}],[\"javascript\",{\"0\":{\"44\":1},\"2\":{\"47\":1,\"48\":1,\"102\":1,\"107\":1}}],[\"jwt\",{\"1\":{\"41\":1,\"72\":1}}],[\"语言系列合集\",{\"1\":{\"40\":1}}],[\"语言源码阅读\",{\"0\":{\"40\":1}}],[\"语言教程\",{\"0\":{\"5\":1}}],[\"groups\",{\"1\":{\"111\":1}}],[\"golang\",{\"2\":{\"43\":1}}],[\"go\",{\"0\":{\"36\":1,\"39\":1,\"40\":1,\"71\":1,\"75\":1,\"79\":1,\"83\":1,\"87\":1,\"91\":1,\"95\":1},\"1\":{\"36\":2,\"40\":1},\"2\":{\"42\":1,\"73\":1,\"77\":1,\"81\":1,\"85\":1,\"89\":1,\"93\":1,\"97\":1}}],[\"gallery\",{\"0\":{\"20\":1},\"2\":{\"37\":1,\"38\":1}}],[\"publish\",{\"1\":{\"111\":1}}],[\"partition\",{\"0\":{\"68\":1},\"1\":{\"68\":3}}],[\"paper\",{\"0\":{\"100\":1},\"1\":{\"45\":1},\"2\":{\"103\":1}}],[\"pool\",{\"1\":{\"64\":1}}],[\"procedure\",{\"0\":{\"67\":1},\"1\":{\"67\":1}}],[\"proxy\",{\"0\":{\"55\":1}}],[\"programming\",{\"1\":{\"1\":1}}],[\"py\",{\"0\":{\"35\":1},\"1\":{\"35\":1}}],[\"link\",{\"0\":{\"23\":1},\"1\":{\"23\":1}}],[\"list\",{\"1\":{\"10\":1,\"80\":1}}],[\"router\",{\"1\":{\"105\":1}}],[\"retention\",{\"1\":{\"117\":1}}],[\"reply\",{\"1\":{\"111\":1}}],[\"request\",{\"1\":{\"111\":1}}],[\"react\",{\"0\":{\"46\":1,\"104\":1},\"1\":{\"46\":1,\"105\":1},\"2\":{\"108\":1}}],[\"recursion\",{\"1\":{\"7\":1}}],[\"rbac\",{\"1\":{\"41\":1,\"72\":1}}],[\"ring\",{\"0\":{\"22\":1},\"1\":{\"22\":1,\"80\":1}}],[\"胜过千言万语\",{\"1\":{\"20\":1}}],[\"中使用事务\",{\"1\":{\"17\":1,\"60\":1}}],[\"如何在\",{\"1\":{\"17\":1,\"60\":1}}],[\"系列合集\",{\"1\":{\"16\":1,\"46\":1}}],[\"找两数和\",{\"1\":{\"12\":1}}],[\"找素数\",{\"1\":{\"12\":1}}],[\"quick\",{\"0\":{\"30\":1},\"1\":{\"30\":1}}],[\"quicksort\",{\"1\":{\"9\":1}}],[\"queue\",{\"1\":{\"10\":1,\"111\":1}}],[\"discard\",{\"1\":{\"117\":1}}],[\"divisible\",{\"1\":{\"65\":1}}],[\"drain\",{\"1\":{\"112\":1}}],[\"demo\",{\"1\":{\"100\":1}}],[\"developer\",{\"1\":{\"1\":1}}],[\"date\",{\"1\":{\"65\":1}}],[\"databse\",{\"2\":{\"18\":1}}],[\"database\",{\"0\":{\"15\":1},\"2\":{\"19\":1,\"62\":1,\"70\":1}}],[\"data\",{\"0\":{\"10\":1,\"65\":1},\"1\":{\"112\":1}}],[\"network\",{\"2\":{\"58\":1}}],[\"nested\",{\"1\":{\"7\":1}}],[\"nginx\",{\"0\":{\"54\":1,\"56\":1},\"1\":{\"56\":1},\"2\":{\"57\":1,\"58\":1}}],[\"nats\",{\"0\":{\"49\":1,\"109\":1,\"115\":1},\"1\":{\"50\":1,\"51\":1},\"2\":{\"52\":1,\"53\":1,\"113\":1,\"118\":1}}],[\"name\",{\"1\":{\"1\":1}}],[\"explain\",{\"0\":{\"66\":1},\"1\":{\"66\":2}}],[\"evenly\",{\"1\":{\"65\":1}}],[\"echarts\",{\"0\":{\"101\":1},\"1\":{\"45\":1},\"2\":{\"103\":1}}],[\"else\",{\"1\":{\"7\":2}}],[\"engineer\",{\"1\":{\"1\":1}}],[\"同名微信公众号\",{\"1\":{\"4\":1}}],[\"更多内容\",{\"0\":{\"3\":1}}],[\"other\",{\"0\":{\"112\":1}}],[\"operating\",{\"0\":{\"111\":1}}],[\"operate\",{\"1\":{\"65\":1}}],[\"os\",{\"0\":{\"87\":1,\"88\":1},\"1\":{\"40\":1,\"88\":2},\"2\":{\"90\":1}}],[\"o\",{\"0\":{\"83\":1,\"84\":1},\"1\":{\"40\":1,\"84\":3}}],[\"output\",{\"1\":{\"6\":1}}],[\"observable\",{\"0\":{\"45\":1,\"99\":1},\"1\":{\"2\":1},\"2\":{\"103\":1}}],[\"on\",{\"1\":{\"2\":1}}],[\"yuque\",{\"1\":{\"2\":1}}],[\"you\",{\"1\":{\"2\":1}}],[\"function\",{\"0\":{\"67\":1},\"1\":{\"67\":1}}],[\"fullstack\",{\"1\":{\"1\":1}}],[\"float\",{\"1\":{\"65\":2}}],[\"flow\",{\"0\":{\"7\":1}}],[\"for\",{\"1\":{\"7\":1}}],[\"find\",{\"1\":{\"2\":1}}],[\"from\",{\"1\":{\"2\":1}}],[\"✍\",{\"0\":{\"2\":1}}],[\"wechat\",{\"1\":{\"2\":1}}],[\"writing\",{\"0\":{\"2\":1},\"1\":{\"1\":1}}],[\"working\",{\"1\":{\"1\":1}}],[\"create\",{\"1\":{\"110\":1,\"116\":1}}],[\"channel\",{\"0\":{\"25\":1,\"75\":1,\"76\":1},\"1\":{\"25\":1,\"40\":1,\"76\":2},\"2\":{\"78\":1}}],[\"consumer\",{\"1\":{\"117\":1}}],[\"config\",{\"1\":{\"117\":1}}],[\"container\",{\"0\":{\"21\":1,\"79\":1,\"80\":1},\"1\":{\"40\":1},\"2\":{\"82\":1}}],[\"control\",{\"0\":{\"7\":1}}],[\"core\",{\"0\":{\"50\":1,\"109\":1}}],[\"copy\",{\"1\":{\"36\":1}}],[\"compare\",{\"0\":{\"31\":1},\"1\":{\"31\":1}}],[\"compared\",{\"1\":{\"9\":1}}],[\"coding\",{\"1\":{\"1\":1,\"2\":1}}],[\"c\",{\"0\":{\"5\":1},\"2\":{\"13\":1,\"14\":1}}],[\"can\",{\"1\":{\"2\":1}}],[\"currently\",{\"1\":{\"1\":1}}],[\"current\",{\"1\":{\"1\":1}}],[\"🤔\",{\"1\":{\"1\":1}}],[\"heap\",{\"1\":{\"80\":1}}],[\"hard\",{\"1\":{\"1\":1}}],[\"have\",{\"1\":{\"1\":1}}],[\"hi\",{\"0\":{\"1\":1}}],[\"buffer\",{\"1\":{\"64\":1}}],[\"bubble\",{\"0\":{\"27\":1},\"1\":{\"9\":1,\"27\":1}}],[\"binary\",{\"1\":{\"6\":1,\"8\":1}}],[\"base\",{\"0\":{\"6\":1,\"110\":1,\"116\":1}}],[\"backend\",{\"1\":{\"1\":1}}],[\"blog\",{\"0\":{\"2\":1},\"1\":{\"2\":2}}],[\"been\",{\"1\":{\"1\":1}}],[\"become\",{\"1\":{\"1\":1}}],[\"bokai\",{\"1\":{\"1\":1}}],[\"taro\",{\"0\":{\"106\":1},\"1\":{\"106\":1}}],[\"types\",{\"0\":{\"65\":1}}],[\"typedef\",{\"1\":{\"10\":1}}],[\"transaction\",{\"0\":{\"60\":1}}],[\"transistor\",{\"1\":{\"4\":1}}],[\"trying\",{\"1\":{\"1\":1}}],[\"thinking\",{\"1\":{\"1\":1}}],[\"there\",{\"0\":{\"1\":1}}],[\"to\",{\"1\":{\"1\":1}}],[\"💻\",{\"1\":{\"1\":1}}],[\"📚\",{\"1\":{\"1\":1}}],[\"👨‍🔬\",{\"1\":{\"1\":1}}],[\"👋\",{\"0\":{\"1\":1}}],[\"subscribe\",{\"1\":{\"111\":1}}],[\"slices\",{\"0\":{\"91\":1},\"1\":{\"40\":1},\"2\":{\"94\":1}}],[\"slice\",{\"0\":{\"34\":1,\"35\":1,\"36\":1,\"92\":1},\"1\":{\"35\":1,\"36\":2,\"92\":2}}],[\"shell\",{\"0\":{\"32\":1},\"1\":{\"32\":1}}],[\"selection\",{\"0\":{\"28\":1},\"1\":{\"9\":1,\"28\":1}}],[\"search\",{\"0\":{\"8\":1},\"1\":{\"8\":1}}],[\"sort\",{\"0\":{\"26\":1,\"95\":1,\"96\":1},\"1\":{\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"40\":1,\"96\":2},\"2\":{\"98\":1}}],[\"sorting\",{\"0\":{\"9\":1}}],[\"software\",{\"1\":{\"1\":1}}],[\"switch\",{\"1\":{\"7\":1}}],[\"stream\",{\"0\":{\"117\":1}}],[\"struct\",{\"1\":{\"10\":1}}],[\"structured\",{\"1\":{\"112\":1}}],[\"structure\",{\"0\":{\"10\":1}}],[\"stack\",{\"0\":{\"24\":1},\"1\":{\"10\":2,\"24\":1}}],[\"status\",{\"1\":{\"1\":1}}],[\"studying\",{\"1\":{\"1\":1}}],[\"antd\",{\"0\":{\"105\":1},\"1\":{\"105\":2}}],[\"acid\",{\"1\":{\"64\":1}}],[\"accomplish\",{\"1\":{\"10\":1}}],[\"authenticate\",{\"0\":{\"41\":1,\"71\":1,\"72\":1},\"2\":{\"74\":1}}],[\"algorithm\",{\"0\":{\"12\":1}}],[\"also\",{\"1\":{\"2\":1}}],[\"array\",{\"1\":{\"6\":1}}],[\"articles\",{\"1\":{\"2\":1}}],[\"apart\",{\"1\":{\"2\":1}}],[\"as\",{\"1\":{\"1\":1}}],[\"am\",{\"1\":{\"1\":1}}],[\"a\",{\"1\":{\"1\":3,\"2\":1}}],[\"mode\",{\"0\":{\"111\":1}}],[\"mongodb\",{\"0\":{\"17\":1,\"59\":1},\"1\":{\"17\":1,\"60\":1},\"2\":{\"61\":1}}],[\"message\",{\"2\":{\"114\":1,\"119\":1}}],[\"merge\",{\"0\":{\"33\":1},\"1\":{\"33\":1}}],[\"memory\",{\"0\":{\"11\":1}}],[\"malloc\",{\"1\":{\"11\":1}}],[\"macros\",{\"1\":{\"6\":1}}],[\"maintain\",{\"1\":{\"2\":1}}],[\"master\",{\"1\":{\"1\":1}}],[\"m\",{\"1\":{\"1\":1}}],[\"mysql\",{\"0\":{\"16\":1,\"63\":1},\"1\":{\"16\":1},\"2\":{\"69\":1}}],[\"my\",{\"1\":{\"1\":2,\"2\":2}}],[\"io\",{\"2\":{\"86\":1}}],[\"if\",{\"1\":{\"7\":2}}],[\"integer\",{\"1\":{\"65\":1}}],[\"introduction\",{\"1\":{\"6\":1}}],[\"innodb\",{\"0\":{\"64\":1}}],[\"insertion\",{\"0\":{\"29\":1},\"1\":{\"9\":1,\"29\":1}}],[\"input\",{\"1\":{\"6\":1}}],[\"i\",{\"0\":{\"83\":1,\"84\":1},\"1\":{\"1\":2,\"2\":1,\"40\":1,\"84\":3}}],[\"is\",{\"1\":{\"1\":1}}],[\"zhang\",{\"1\":{\"1\":1}}],[\"关于我\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
